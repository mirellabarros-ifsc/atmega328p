.equ botao = 3
.equ led1 = 7
.def count = r17
    
start:
    ; setup
    
wait_press:
    sbis gpior0, botao
    rjmp wait_press
    
    clr count ; isso é igual a ldi r17, 0

pisca_led1:
    ; acende led
    sbi gpior0, led1
    ldi r19, 40
    ;call delay
    
    ; apaga led
    cbi gpior0, led1
    ldi r19, 40
    ;call delay
    
    inc count
    cpi count, 5
    brne pisca_led1
    
    rjmp wait_press
    
;------------------------------------------------------------
;SUB-ROTINA DE ATRASO Programável
;Depende do valor de R19 carregado antes da chamada.
;Exemplos: 
; - R19 = 16 --> 200ms 
; - R19 = 80 --> 1s 
;------------------------------------------------------------
delay:           
  push r17	     ; Salva os valores de r17,
  push r18	     ; ... r18,
  in r17,SREG    ; ...
  push r17       ; ... e SREG na pilha.

  ; Executa sub-rotina :
  clr r17
  clr r18
loop:            
  dec  R17       ;decrementa R17, começa com 0x00
  brne loop      ;enquanto R17 > 0 fica decrementando R17
  dec  R18       ;decrementa R18, começa com 0x00
  brne loop      ;enquanto R18 > 0 volta decrementar R18
  dec  R19       ;decrementa R19
  brne loop      ;enquanto R19 > 0 vai para volta

  pop r17         
  out SREG, r17  ; Restaura os valores de SREG,
  pop r18        ; ... r18
  pop r17        ; ... r17 da pilha

  ret
